{"version":3,"sources":["Login/styles.module.css","PostFeed/styles.module.css","PostForm/styles.module.css","firebase.js","Login/Login.js","PostFeed/PostFeed.js","PostForm/PostForm.js","App.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fAuth","Login","useState","email","setEmail","password","setPassword","error","setError","login","e","p","signInWithEmailAndPassword","catch","code","console","log","style","width","maxWidth","margin","marginTop","textAlign","className","styles","loginInput","type","placeholder","onKeyDown","key","onChange","target","value","trim","marginBottom","disabled","loginButton","onClick","PostFeed","posts","setPosts","history","useHistory","useEffect","isCancelled","collection","orderBy","get","then","snap","_posts","forEach","doc","data","push","id","postContainer","length","map","post","index","title","alt","src","img","editPost","window","confirm","delete","go","deletePost","deleteButton","PostForm","isEdit","body","setPost","location","useLocation","postId","search","split","form","defaultValue","update","add","date","Date","now","cancelButton","App","user","setUser","onAuthStateChanged","u","signOut","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb263304.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginInput\":\"styles_loginInput__1199H\",\"loginButton\":\"styles_loginButton__m-EkS\",\"error\":\"styles_error__2y5DR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"styles_postContainer__1w0gv\",\"post\":\"styles_post__1KNJg\",\"deleteButton\":\"styles_deleteButton__o47Gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__2BpkQ\",\"cancelButton\":\"styles_cancelButton__lHh0r\"};","import * as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyAPr55APpnid8bxmYeBT32Slz_HOnTBsQs\",\r\n  authDomain: \"ptmfoundation-8c7fd.firebaseapp.com\",\r\n  databaseURL: \"https://ptmfoundation-8c7fd.firebaseio.com\",\r\n  projectId: \"ptmfoundation-8c7fd\",\r\n  storageBucket: \"ptmfoundation-8c7fd.appspot.com\",\r\n  messagingSenderId: \"864000579543\",\r\n  appId: \"1:864000579543:web:5944d2c9615ad9f20a9d92\"\r\n});\r\n\r\nconst fDB = firebase.firestore();\r\nconst fAuth = firebase.auth();\r\n\r\nexport const getAllPosts = () => {\r\n  return fDB.collection('posts').orderBy('date', 'desc').get();\r\n};\r\n\r\nexport const getPost = (id) => {\r\n  return fDB.collection('posts').doc(id).get();\r\n};\r\n\r\n// export const createPost = (post) => {\r\n//   const {\r\n//     title,\r\n//     img,\r\n//     video,\r\n//     body\r\n//   } = post;\r\n\r\n//   return fDB\r\n//     .collection('post')\r\n//     .add({\r\n\r\n//     });\r\n// };\r\n\r\nexport const updatePost = (id, post) => {\r\n  const {\r\n    title,\r\n    img,\r\n    video,\r\n    body,\r\n    date\r\n  } = post;\r\n\r\n  return fDB\r\n    .collection('posts')\r\n    .doc(id)\r\n    .update({\r\n      title,\r\n      img,\r\n      video,\r\n      body,\r\n      date\r\n    });\r\n};\r\n\r\nexport const userIsLoggedIn = () => {\r\n  return fAuth.currentUser ? true : false;\r\n};\r\nexport const login = (e, p) => {\r\n  return fAuth.signInWithEmailAndPassword(e, p);\r\n};\r\n\r\nexport const user = () => fAuth.currentUser;\r\n","import React, { useState } from 'react';\r\nimport { login as fLogin } from '../firebase';\r\nimport styles from './styles.module.css';\r\n\r\nexport const Login = () => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  const login = () => {\r\n    if(email && password) {\r\n      fLogin(email, password)\r\n      .catch(error => {\r\n        if(error.code === 'auth/invalid-email') {\r\n          setError('Invalid credentials');\r\n        } else {\r\n          console.log(error.code === 'auth/wrong-password');\r\n          setError('Incorrect password');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '300px', maxWidth: '100%', margin: 'auto', marginTop: '100px' }}>\r\n    <h1 style={{ textAlign: 'center' }}>Login</h1>\r\n    <input \r\n        className={styles.loginInput}\r\n        type='email' \r\n        placeholder='email' \r\n        onKeyDown={(e) => {\r\n          if(e.key === 'Enter') {\r\n            login();\r\n          }\r\n        }}\r\n        onChange={(e) => setEmail(e.target.value.trim())} />\r\n      <input \r\n       className={styles.loginInput}\r\n        style={{ width: '300px', maxWidth: '100%', marginBottom: '25px' }}\r\n        type='password' \r\n        placeholder='password' \r\n        onKeyDown={(e) => {\r\n          if(e.key === 'Enter') {\r\n            login();\r\n          }\r\n        }}\r\n        onChange={(e) => setPassword(e.target.value.trim())} />\r\n        {\r\n          error &&\r\n          <div className={styles.error}>\r\n            {error}\r\n          </div>\r\n        }\r\n\r\n      <button disabled={!email || !password} className={styles.loginButton} onClick={login}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\n\r\nexport const PostFeed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n    firebase\r\n      .firestore()\r\n      .collection('posts')\r\n      .orderBy('date', 'desc')\r\n      .get()\r\n      .then((snap) => {\r\n        if (!isCancelled) {\r\n          const _posts = [];\r\n          snap.forEach((doc) => {\r\n            const data = doc.data();\r\n            _posts.push({\r\n              ...data,\r\n              id: doc.id,\r\n            });\r\n          });\r\n          setPosts(_posts);\r\n        }\r\n      });\r\n    return () => {\r\n      isCancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  const deletePost = (post) => {\r\n    if (window.confirm(`Are you sure you want to delete: ${post.title}?`)) {\r\n      firebase\r\n        .firestore()\r\n        .collection('posts')\r\n        .doc(post.id)\r\n        .delete()\r\n        .then(() => history.go());\r\n    }\r\n  };\r\n\r\n  const newPost = () => history.push('/PTMFoundationAdmin/new');\r\n  const editPost = (post) => history.push(`/PTMFoundationAdmin/edit?post=${post.id}`);\r\n\r\n  return (\r\n    <div className={styles.postContainer}>\r\n      <h1>Posts</h1>\r\n      <button onClick={newPost}>Create New Post</button>\r\n      {posts.length ? (\r\n        posts.map((post, index) => {\r\n          return (\r\n            <div className={styles.post} key={index}>\r\n              <h1>{post.title}</h1>\r\n              <img alt='post' src={post.img} />\r\n              <button onClick={() => editPost(post)}>Edit</button>\r\n              <button onClick={() => deletePost(post)} className={styles.deleteButton}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <>No posts yet</>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport styles from './styles.module.css';\r\n\r\nexport const PostForm = ({ isEdit }) => {\r\n  const [post, setPost] = useState({\r\n    body: '',\r\n    title: '',\r\n    img: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const postId = location.search?.split('post=')?.[1];\r\n    if (isEdit && postId) {\r\n      firebase\r\n        .firestore()\r\n        .collection('posts')\r\n        .doc(postId)\r\n        .get()\r\n        .then((snap) => {\r\n          const data = snap.data();\r\n          if (data) {\r\n            setPost(data);\r\n          }\r\n        });\r\n    }\r\n  }, [location.search, isEdit]);\r\n\r\n  const updatePost = () => {\r\n    const postId = location.search?.split('post=')?.[1];\r\n    if (post.title && post.body && post.img) {\r\n      if (isEdit && postId) {\r\n        firebase.firestore().collection('posts').doc(postId).update({\r\n          title: post.title,\r\n          body: post.body,\r\n          img: post.img,\r\n        }).then(() => history.push('/PTMFoundationAdmin/home'));\r\n      } else {\r\n        firebase\r\n          .firestore()\r\n          .collection('posts')\r\n          .add({\r\n            ...post,\r\n            date: Date.now(),\r\n          }).then(() => history.push('/PTMFoundationAdmin/home'));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <h1>{isEdit ? 'Edit Post' : 'Create Post'}</h1>\r\n\r\n      <label>Title</label>\r\n      <input\r\n        placeholder='Title'\r\n        value={post.title}\r\n        onChange={(e) =>\r\n          setPost({\r\n            ...post,\r\n            title: e.target.value.trim(),\r\n          })\r\n        }\r\n      />\r\n\r\n      <label>Image URL</label>\r\n      <input\r\n        placeholder='Image URL'\r\n        value={post.img}\r\n        onChange={(e) =>\r\n          setPost({\r\n            ...post,\r\n            img: e.target.value.trim(),\r\n          })\r\n        }\r\n      />\r\n\r\n      <label>Post Body</label>\r\n      <textarea\r\n        onChange={(e) =>\r\n          setPost({\r\n            ...post,\r\n            body: e.target.value.trim(),\r\n          })\r\n        }\r\n        placeholder='Post'\r\n        defaultValue={post.body}\r\n      />\r\n\r\n      <button onClick={updatePost}>{isEdit ? 'Update' : 'Create'}</button>\r\n      <button className={styles.cancelButton} onClick={() => history.push('/PTMFoundationAdmin/home')}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { Login } from './Login/Login';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { PostFeed } from './PostFeed/PostFeed';\nimport { PostForm } from './PostForm/PostForm';\n\nexport const App = () => {\n\n  const [user, setUser] = useState();\n  const history = useHistory();\n\n  \n  const logOut = () => {\n    firebase.auth().signOut();\n  };\n\n  firebase.auth().onAuthStateChanged(u => {\n    setUser(u);\n  });\n\n  useEffect(() => {\n    if(user) {\n      history.push('/PTMFoundationAdmin/home');\n    } else {\n      history.push('/PTMFoundationAdmin/login');\n    }\n  }, [user, history]);\n\n  return (\n    <div>\n      <button onClick={logOut}>Log Out</button>\n      <Switch>\n        <Route path='/PTMFoundationAdmin/login'>\n          <Login />\n        </Route>\n        <Route path='/PTMFoundationAdmin/home'>\n          <PostFeed />\n        </Route>\n        <Route path='/PTMFoundationAdmin/new'>\n          <PostForm isEdit={false} />\n        </Route>\n        <Route path='/PTMFoundationAdmin/edit'>\n          <PostForm isEdit={true} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}